// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlancherExpert.Data;

#nullable disable

namespace PlancherExpert.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlancherExpert.Models.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CP_Id")
                        .HasColumnType("int");

                    b.Property<int?>("CouvrePid")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("largeur")
                        .HasColumnType("int");

                    b.Property<int>("longueur")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouvrePid");

                    b.HasIndex("UserId");

                    b.ToTable("Commande");
                });

            modelBuilder.Entity("PlancherExpert.Models.CouvrePlancher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<float>("prixMa")
                        .HasColumnType("real");

                    b.Property<float>("prixMo")
                        .HasColumnType("real");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CouvrePlancher");
                });

            modelBuilder.Entity("PlancherExpert.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("PlancherExpert.Models.Commande", b =>
                {
                    b.HasOne("PlancherExpert.Models.CouvrePlancher", "CouvreP")
                        .WithMany()
                        .HasForeignKey("CouvrePid");

                    b.HasOne("PlancherExpert.Models.Utilisateur", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CouvreP");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
